package cn.it.shop.action;

import java.lang.reflect.ParameterizedType;
import java.util.Map;

import org.apache.struts2.interceptor.ApplicationAware;
import org.apache.struts2.interceptor.RequestAware;
import org.apache.struts2.interceptor.SessionAware;

import cn.it.shop.model.Category;
import cn.it.shop.service.AccountService;
import cn.it.shop.service.CategoryService;

import com.opensymphony.xwork2.ActionSupport;
import com.opensymphony.xwork2.ModelDriven;
/**
 * Struts执行流程：先创建Action，再调用拦截器，拦截器访问成功过条用Action的方法
 * 
 * (在项目启动时Struts的过滤器，已经把相应的内置对象对应的Map存储到了ActionContext和值栈中)
 * 如果实现了相应的****Aware接口，就会从ActionContext中取得相应的Map进行传入，实现的拦截器为servletConfig
 * @author Administrator
 *
 */
public class BaseAction<T> extends ActionSupport  implements RequestAware,SessionAware,ApplicationAware,ModelDriven<T> {

	protected T model;
	
    protected CategoryService categoryService;
   
    protected AccountService accountService;
    
    public void setAccountService(AccountService accountService) {
    	System.out.println(accountService);
		this.accountService = accountService;
	}
	
	public void setCategoryService(CategoryService categoryService){
		System.out.println(categoryService);
		this.categoryService=categoryService;
	}
	
	public T getModel() {
		ParameterizedType type=(ParameterizedType)this.getClass().getGenericSuperclass();
		Class clazz=(Class)type.getActualTypeArguments()[0];
		try {
			model=(T)clazz.newInstance();
		} catch (Exception e) {
			throw new RuntimeException();
		}
		return model;
	}
	
	protected Map<String, Object> request;
	protected Map<String, Object> session;
	protected Map<String, Object> application;
	
	@Override
	public void setApplication(Map<String, Object> application) {
		// TODO Auto-generated method stub
		this.application=application;
	}
	@Override
	public void setRequest(Map<String, Object> request) {
		// TODO Auto-generated method stub
		this.request=request;
	}
	@Override
	public void setSession(Map<String, Object> session) {
		// TODO Auto-generated method stub
		this.session=session;
	}
	
}
